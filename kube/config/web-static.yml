apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: anubis

spec:
  selector:
    matchLabels:
      app: web
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        app: web
    spec:
      dnsPolicy: ClusterFirst
      containers:
      - name: web
        image: registry.osiris.services/anubis/web:v2.0.0-alpha
        imagePullPolicy: Always
        ports:
        - name: web
          containerPort: 3000
        # livenessProbe:
        #   exec:
        #     command:
        #       - curl
        #       - http://localhost/
        #   initialDelaySeconds: 30
        #   periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: anubis
  labels:
    app: web
spec:
  type: NodePort
  selector:
    app: web
  ports:
  - name: web
    port: 3000
    targetPort: 3000

---
# Public Ingress Route /*
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingress.route.anubis.web
  namespace: anubis
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`anubis.osiris.services`)
    middlewares:
    - name: whitelist-vpn
      namespace: traefik
    services:
    - name: web
      port: 3000
  tls:
    certResolver: tls
