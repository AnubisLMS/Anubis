### ELK stack
# - Elasticsearch
# - Logstash
# - Kibana


apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elastic-data
  namespace: {{ .Release.Namespace }}
  labels:
    app: elasticsearch
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}

spec:
  {{- if .Values.elasticsearch.storageClassName }}
  storageClassName: {{ .Values.elasticsearch.storageClassName | quote }}
  {{- end }}
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.elasticsearch.storage | quote }}
---
## Logstash
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: {{ .Release.Namespace }}
  labels:
    app: logstash
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}

spec:
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
        ecosystem: elk
    spec:
      containers:
      - name: logstash
        image: {{ .Values.logstash.image }}:{{ .Values.logstash.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - name: web
          containerPort: 5000
        - name: api
          containerPort: 9600

---

## Elasticsearch
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: {{ .Release.Namespace }}
  labels:
    app: elasticsearch
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}

spec:
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
        ecosystem: elk
    spec:
      initContainers:
      - name: volume-permissions
        image: busybox:1.31.1
        command: ["sh", "-c", "chown -R 1000:1000 /data && chmod -Rv 755 /data/*"]
        volumeMounts:
        - name: elastic-data
          mountPath: /data

      containers:
      - name: elasticsearch
        image: {{ .Values.elasticsearch.image }}:{{ .Values.elasticsearch.tag }}
        resources:
          {{- toYaml .Values.elasticsearch.resources | nindent 10 }}
        ports:
        - name: web
          containerPort: 9200
        env:
        - name: "discovery.type"
          value: "single-node"
        volumeMounts:
        - name: elastic-data
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: elastic-data
        persistentVolumeClaim:
          claimName: elastic-data
---
## kibana
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: {{ .Release.Namespace }}
  labels:
    app: kibana
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}

spec:
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
        ecosystem: elk
    spec:
      containers:
      - name: kibana
        image: {{ .Values.kibana.image }}:{{ .Values.kibana.tag }}
        ports:
        - name: web
          containerPort: 5601

---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: anubis
  labels:
    app: logstash
spec:
  selector:
    app: logstash
  ports:
  - name: logstash
    protocol: UDP
    port: 5000
    targetPort: 5000
  - name: api
    port: 9600
    targetPort: 9600

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: anubis
  labels:
    app: elasticsearch
spec:
  type: NodePort
  selector:
    app: elasticsearch
  ports:
  - name: web
    port: 9200
    targetPort: 9200

---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: anubis
  labels:
    app: kibana
spec:
  type: NodePort
  selector:
    app: kibana
  ports:
  - name: web
    port: 5601
    targetPort: 5601

---
