apiVersion: apps/v1
kind: Deployment
metadata:
  name: anubis-web
  namespace: {{ .Release.Namespace }}
  labels:
    app: anubis-web
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}

spec:
  selector:
    matchLabels:
      app: anubis-web
  replicas: 2
  {{- if .Values.rollingUpdates }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  revisionHistoryLimit: 10
  {{- end }}
  template:
    metadata:
      labels:
        app: anubis-web
    spec:
      dnsPolicy: ClusterFirst
      containers:
      - name: anubis-web
        image: {{ .Values.web.image }}:{{ .Values.web.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - name: web
          containerPort: 3000
        livenessProbe:
          exec:
            command:
              - curl
              - http://localhost:3000/
          initialDelaySeconds: 30
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: anubis-web
  namespace: {{ .Release.Namespace }}
  labels:
    app: anubis-web
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}

spec:
  type: NodePort
  selector:
    app: anubis-web
  ports:
  - name: web
    port: 3000
    targetPort: 3000

---
# Public Ingress Route /*
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingress.route.anubis.web
  namespace: {{ .Release.Namespace }}
  labels:
    app: anubis-web
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`{{ .Values.domain }}`)
    {{- if .Values.vpnOnly }}
    middlewares:
    - name: whitelist-vpn
      namespace: traefik
    {{- end }}
    services:
    - name: anubis-web
      port: 3000
  tls:
    certResolver: tls
