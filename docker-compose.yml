###############################################################
#                                                             #
#  This file is meant for debugging ONLY. Do not use in prod  #
#                                                             #
###############################################################


version: '3.7'

services:
  traefik:
    image: "traefik:v2.2"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"

    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=false"

  api:
    image: registry.digitalocean.com/anubis/api:${GIT_TAG:-latest}
    build: ./api
    command: sh -c "while true; do python3 dev.py; sleep 1; done"
    ports:
      - 5000:5000
    environment:
      - "MINDEBUG=0"
      - "DEBUG=1"
      - "DB_HOST=db"
      - "MPLCONFIGDIR=/tmp"
      - "GITHUB_TOKEN"
      - "SENTRY_DSN"
    volumes:
      - "./api:/opt/app"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.api.loadbalancer.server.port=5000"
      - "traefik.http.middlewares.strip-api.stripprefix.prefixes=/api"
      - "traefik.http.routers.api-public.rule=(Host(`localhost`) && PathPrefix(`/api/`)) || (Host(`localhost`) && PathPrefix(`/api/`) && HeadersRegexp(`web`, `new`))"
      - "traefik.http.routers.api-public.entrypoints=http,https"
      - "traefik.http.routers.api-public.middlewares=strip-api@docker"

  pipeline-api:
    build: ./api
    image: registry.digitalocean.com/anubis/api:latest
    environment:
      - "DEBUG=1"
      - "DB_HOST=db"
      - "GITHUB_TOKEN"
      - "SENTRY_DSN"
      - "CREATE_APP_FUNCTION=create_pipeline_app"
    ports:
      - 127.0.0.1:5004:5004
    volumes:
      - "./api:/opt/app"
    labels:
      - "traefik.enable=false"

  rpc-default:
    build: ./api
    command: "rq worker -u redis://:anubis@redis-master default"
    environment:
      - "DEBUG=1"
      - "DB_HOST=db"
      - "GITHUB_TOKEN"
      - "SENTRY_DSN"
    volumes:
      - "./api:/opt/app"
    labels:
      - "traefik.false=enable"

  rpc-theia:
    build: ./api
    command: "rq worker -u redis://:anubis@redis-master theia"
    environment:
      - "DEBUG=1"
      - "DB_HOST=db"
      - "GITHUB_TOKEN"
      - "SENTRY_DSN"
    volumes:
      - "./api:/opt/app"
    labels:
      - "traefik.enable=false"

  rpc-regrade:
    build: ./api
    command: "rq worker -u redis://:anubis@redis-master regrade"
    environment:
      - "DEBUG=1"
      - "DB_HOST=db"
      - "GITHUB_TOKEN"
      - "SENTRY_DSN"
    volumes:
      - "./api:/opt/app"
    labels:
      - "traefik.enable=false"

  web:
    image: registry.digitalocean.com/anubis/web:${GIT_TAG:-latest}
    build: ./web

  web-dev:
    image: node:16-alpine
    user: 1000:1000
    working_dir: /opt/app
    command: sh -c 'yarn && yarn run start'
    environment:
      NODE_ENV: development
      REACT_APP_DEV: dev
    volumes:
      - ./web:/opt/app
    ports:
      - 127.0.0.1:3000:3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.web.loadbalancer.server.port=3000"
      - "traefik.http.routers.web-public.rule=Host(`localhost`)"
      - "traefik.http.routers.web-public.entrypoints=http,https"

  db:
    image: mariadb:10.6
    dns: [8.8.8.8]
    command:
      - "mysqld"
      - "--max-allowed-packet=1073741824"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_general_ci"
    ports:
      - "127.0.0.1:3306:3306"
    environment:
      - "MYSQL_ROOT_PASSWORD=anubis"
      - "MYSQL_DATABASE=anubis"
      - "MYSQL_USER=anubis"
      - "MYSQL_PASSWORD=anubis"
    volumes:
      - "db_data:/var/lib/mysql"
    labels:
      - "traefik.enable=false"

  redis-master:
    image: redis:latest
    command: redis-server --requirepass anubis
    ports:
      - "127.0.0.1:6379:6379"
    labels:
      - "traefik.enable=false"

  theia-base-38:
    image: registry.digitalocean.com/anubis/theia-base:python-3.8
    build:
      context: ./theia/ide/theia-base
      args:
        PY_VERSION: '3.8.12'
        BUILD_THEIA: 'ON'

  theia-base-39:
    image: registry.digitalocean.com/anubis/theia-base:python-3.9
    build:
      context: ./theia/ide/theia-base
      args:
        PY_VERSION: '3.9.10'
        BUILD_THEIA: 'ON'

  theia-base-310:
    image: registry.digitalocean.com/anubis/theia-base:python-3.10
    build:
      context: ./theia/ide/theia-base
      args:
        PY_VERSION: '3.10.2'
        BUILD_THEIA: 'ON'

  theia-base-38-bare:
    image: registry.digitalocean.com/anubis/theia-base:python-3.8-bare
    build:
      context: ./theia/ide/theia-base
      args:
        PY_VERSION: '3.8.12'
        BUILD_THEIA: 'OFF'

  theia-base-39-bare:
    image: registry.digitalocean.com/anubis/theia-base:python-3.9-bare
    build:
      context: ./theia/ide/theia-base
      args:
        PY_VERSION: '3.9.10'
        BUILD_THEIA: 'OFF'

  theia-base-310-bare:
    image: registry.digitalocean.com/anubis/theia-base:python-3.10-bare
    build:
      context: ./theia/ide/theia-base
      args:
        PY_VERSION: '3.10.2'
        BUILD_THEIA: 'OFF'

  webtop-base-ubuntu:
    image: registry.digitalocean.com/anubis/webtop-base:ubuntu
    build:
      context: ./theia/ide/webtop-base
      args: {}

  theia-golang:
    image: registry.digitalocean.com/anubis/theia-golang:latest
    build: ./theia/ide/theia-golang

  theia-xv6:
    image: registry.digitalocean.com/anubis/theia-xv6:latest
    build: ./theia/ide/theia-xv6

  theia-admin:
    image: registry.digitalocean.com/anubis/theia-admin:latest
    build: ./theia/ide/theia-admin

  theia-devops:
    image: registry.digitalocean.com/anubis/theia-devops:latest
    build: ./theia/ide/theia-devops

  theia-flask-39:
    image: registry.digitalocean.com/anubis/theia-flask:python-3.9
    build:
      context: ./theia/ide/theia-flask
      args:
        PY_VERSION: '3.9'

  theia-flask-310:
    image: registry.digitalocean.com/anubis/theia-flask:python-3.10
    build:
      context: ./theia/ide/theia-flask
      args:
        PY_VERSION: '3.10'

  theia-mysql-39:
    image: registry.digitalocean.com/anubis/theia-mysql:python-3.9
    build:
      context: ./theia/ide/theia-mysql
      args:
        PY_VERSION: '3.9'

  theia-mysql-310:
    image: registry.digitalocean.com/anubis/theia-mysql:python-3.10
    build:
      context: ./theia/ide/theia-mysql
      args:
        PY_VERSION: '3.10'

  theia-jepst:
    image: registry.digitalocean.com/anubis/theia-jepst:latest
    build: ./theia/ide/theia-jepst

  theia-proxy:
    image: registry.digitalocean.com/anubis/theia-proxy:${GIT_TAG:-latest}
    build: ./theia/proxy

  theia-init:
    image: registry.digitalocean.com/anubis/theia-init:${GIT_TAG:-latest}
    build: ./theia/init

  theia-sidecar:
    image: registry.digitalocean.com/anubis/theia-sidecar:${GIT_TAG:-latest}
    build: ./theia/sidecar

volumes:
  db_data:
