"""ADD email

Revision ID: 4f7efe8d8177
Revises: 70bf8c2bf6a4
Create Date: 2022-08-26 12:54:44.980069

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "4f7efe8d8177"
down_revision = "70bf8c2bf6a4"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "email_template",
        sa.Column(
            "key",
            mysql.VARCHAR(
                charset="utf8mb4", collation="utf8mb4_general_ci", length=128
            ),
            nullable=False,
        ),
        sa.Column(
            "subject",
            mysql.VARCHAR(
                charset="utf8mb4", collation="utf8mb4_general_ci", length=1024
            ),
            nullable=True,
        ),
        sa.Column(
            "body",
            mysql.VARCHAR(
                charset="utf8mb4", collation="utf8mb4_general_ci", length=4096
            ),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("key"),
        mysql_charset="utf8mb4",
        mysql_collate="utf8mb4_general_ci",
    )
    op.create_index(
        op.f("ix_email_template_key"), "email_template", ["key"], unique=False
    )
    op.create_table(
        "email_event",
        sa.Column(
            "id",
            mysql.VARCHAR(
                charset="utf8mb4", collation="utf8mb4_general_ci", length=36
            ),
            nullable=False,
        ),
        sa.Column(
            "owner_id",
            mysql.VARCHAR(
                charset="utf8mb4", collation="utf8mb4_general_ci", length=36
            ),
            nullable=True,
        ),
        sa.Column(
            "template_id",
            mysql.VARCHAR(
                charset="utf8mb4", collation="utf8mb4_general_ci", length=128
            ),
            nullable=True,
        ),
        sa.Column(
            "reference_id",
            mysql.VARCHAR(
                charset="utf8mb4", collation="utf8mb4_general_ci", length=36
            ),
            nullable=True,
        ),
        sa.Column(
            "reference_type",
            mysql.VARCHAR(
                charset="utf8mb4", collation="utf8mb4_general_ci", length=128
            ),
            nullable=True,
        ),
        sa.Column(
            "subject",
            mysql.VARCHAR(
                charset="utf8mb4", collation="utf8mb4_general_ci", length=2048
            ),
            nullable=True,
        ),
        sa.Column(
            "body",
            mysql.VARCHAR(
                charset="utf8mb4", collation="utf8mb4_general_ci", length=8192
            ),
            nullable=True,
        ),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.Column("last_updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["template_id"],
            ["email_template.key"],
        ),
        sa.PrimaryKeyConstraint("id"),
        mysql_charset="utf8mb4",
        mysql_collate="utf8mb4_general_ci",
    )
    op.create_index(
        op.f("ix_email_event_id"), "email_event", ["id"], unique=False
    )
    op.add_column(
        "user",
        sa.Column("deadline_email_enabled", sa.Boolean()),
    )
    op.add_column(
        "user",
        sa.Column("release_email_enabled", sa.Boolean()),
    )
    conn = op.get_bind()
    conn.execute('UPDATE `user` SET `deadline_email_enabled` = 1;')
    conn.execute('UPDATE `user` SET `release_email_enabled` = 1;')
    op.alter_column('user', 'deadline_email_enabled', type_=sa.Boolean(), nullable=False)
    op.alter_column('user', 'release_email_enabled', type_=sa.Boolean(), nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("user", "release_email_enabled")
    op.drop_column("user", "deadline_email_enabled")
    op.drop_index(op.f("ix_email_event_id"), table_name="email_event")
    op.drop_table("email_event")
    op.drop_index(op.f("ix_email_template_key"), table_name="email_template")
    op.drop_table("email_template")
    # ### end Alembic commands ###
