###############################
# Network policies are very hard to read, and even harder to write
# Use on:
# https://kubernetes.io/docs/concepts/services-networking/network-policies/
# https://editor.cilium.io/

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "chart.fullname" . }}-student
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      network-policy: os-student
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          {{- include "chart.selectorLabels" . | nindent 10 }}
          component: proxy
    ports:
    # IDE server port
    - {protocol: TCP, port: 5000}
    - {protocol: UDP, port: 5000}
    # Optional proxy ports
    - {protocol: TCP, port: 8000}
    - {protocol: UDP, port: 8000}
    - {protocol: TCP, port: 8001}
    - {protocol: UDP, port: 8001}
    - {protocol: TCP, port: 8002}
    - {protocol: UDP, port: 8002}
    - {protocol: TCP, port: 8003}
    - {protocol: UDP, port: 8003}
    - {protocol: TCP, port: 8004}
    - {protocol: UDP, port: 8004}
    - {protocol: TCP, port: 8005}
    - {protocol: UDP, port: 8005}
    - {protocol: TCP, port: 8006}
    - {protocol: UDP, port: 8006}
    - {protocol: TCP, port: 8007}
    - {protocol: UDP, port: 8007}
    - {protocol: TCP, port: 8008}
    - {protocol: UDP, port: 8008}
    - {protocol: TCP, port: 8009}
    - {protocol: UDP, port: 8009}
    - {protocol: TCP, port: 8010}
    - {protocol: UDP, port: 8010}

  egress:

  # Allow out to the internet (not to rest of cluster)
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
          - 10.0.0.0/8
          - 192.168.0.0/16
          - 172.16.0.0/12
          - 169.254.169.254/32  # Hosting Provider Metadata IP
---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "chart.fullname" . }}-admin
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      network-policy: admin
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          {{- include "chart.selectorLabels" . | nindent 10 }}
          component: proxy
    ports:
    - {protocol: TCP, port: 5000}
    - {protocol: UDP, port: 5000}
    # Optional proxy ports
    - {protocol: TCP, port: 8000}
    - {protocol: UDP, port: 8000}
    - {protocol: TCP, port: 8001}
    - {protocol: UDP, port: 8001}
    - {protocol: TCP, port: 8002}
    - {protocol: UDP, port: 8002}
    - {protocol: TCP, port: 8003}
    - {protocol: UDP, port: 8003}
    - {protocol: TCP, port: 8004}
    - {protocol: UDP, port: 8004}
    - {protocol: TCP, port: 8005}
    - {protocol: UDP, port: 8005}
    - {protocol: TCP, port: 8006}
    - {protocol: UDP, port: 8006}
    - {protocol: TCP, port: 8007}
    - {protocol: UDP, port: 8007}
    - {protocol: TCP, port: 8008}
    - {protocol: UDP, port: 8008}
    - {protocol: TCP, port: 8009}
    - {protocol: UDP, port: 8009}
    - {protocol: TCP, port: 8010}
    - {protocol: UDP, port: 8010}
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 10.0.0.0/8
        - 192.168.0.0/16
        - 172.16.0.0/12
        - 169.254.169.254/32  # Hosting Provider Metadata IP
  - to:
    - podSelector:
        matchLabels:
          {{- include "chart.selectorLabels" . | nindent 10 }}
          component: pipeline-api
    ports:
    - port: 5000
  - to:
    - podSelector:
        matchLabels:
          {{- include "chart.selectorLabels" . | nindent 10 }}
          component: api
    ports:
    - port: 5000
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - port: 53
      protocol: UDP
---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "chart.fullname" . }}-shell-autograde
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      network-policy: shell-autograde-student
  policyTypes:
  - Ingress
  - Egress
  ingress:

  # IDE Proxy -> IDE
  - from:
    - podSelector:
        matchLabels:
          {{- include "chart.selectorLabels" . | nindent 10 }}
          component: proxy
    ports:
    - protocol: TCP
      port: 5000
    - protocol: UDP
      port: 5000

  egress:

  # Kubernetes System DNS
  - to:
      - namespaceSelector: { }
        podSelector:
          matchLabels:
            k8s-app: kube-dns
    ports:
      - { protocol: TCP, port: 53 }
      - { protocol: UDP, port: 53 }

  # Default allow public addresses
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 10.0.0.0/8
        - 192.168.0.0/16
        - 172.16.0.0/12
        - 169.254.169.254/32  # Hosting Provider Metadata IP

  # Allow to pipeline-api
  - to:
    - podSelector:
        matchLabels:
          {{- include "chart.selectorLabels" . | nindent 10 }}
          component: pipeline-api
    ports:
    - {protocol: TCP, port: 5000}
---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "chart.fullname" . }}-submission-pipeline
  namespace: {{ .Release.Namespace }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
spec:
  podSelector:
    matchLabels:
      network-policy: submission-pipeline
  policyTypes:
  - Ingress
  - Egress
  egress:

  # Kubernetes System DNS
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - {protocol: TCP, port: 53}
    - {protocol: UDP, port: 53}

  # Pipeline API
  - to:
    - podSelector:
        matchLabels:
          {{- include "chart.selectorLabels" . | nindent 10 }}
          component: pipeline-api
    ports:
    - {protocol: TCP, port: 5000}

  # Github IP Addresses
  - to:
    - ipBlock:
        cidr: 192.30.252.0/22
    - ipBlock:
        cidr: 185.199.108.0/22
    - ipBlock:
        cidr: 140.82.112.0/20
    - ipBlock:
        cidr: 13.114.40.48/32
    - ipBlock:
        cidr: 52.192.72.89/32
    - ipBlock:
        cidr: 52.69.186.44/32
    - ipBlock:
        cidr: 15.164.81.167/32
    - ipBlock:
        cidr: 52.78.231.108/32
    - ipBlock:
        cidr: 13.234.176.102/32
    - ipBlock:
        cidr: 13.234.210.38/32
    - ipBlock:
        cidr: 13.229.188.59/32
    - ipBlock:
        cidr: 13.250.177.223/32
    - ipBlock:
        cidr: 52.74.223.119/32
    - ipBlock:
        cidr: 13.236.229.21/32
    - ipBlock:
        cidr: 13.237.44.5/32
    - ipBlock:
        cidr: 52.64.108.95/32
    - ipBlock:
        cidr: 18.228.52.138/32
    - ipBlock:
        cidr: 18.228.67.229/32
    - ipBlock:
        cidr: 18.231.5.6/32
    - ipBlock:
        cidr: 18.181.13.223/32
    - ipBlock:
        cidr: 54.238.117.237/32
    - ipBlock:
        cidr: 54.168.17.15/32
    - ipBlock:
        cidr: 3.34.26.58/32
    - ipBlock:
        cidr: 13.125.114.27/32
    - ipBlock:
        cidr: 3.7.2.84/32
    - ipBlock:
        cidr: 3.6.106.81/32
    - ipBlock:
        cidr: 18.140.96.234/32
    - ipBlock:
        cidr: 18.141.90.153/32
    - ipBlock:
        cidr: 18.138.202.180/32
    - ipBlock:
        cidr: 52.63.152.235/32
    - ipBlock:
        cidr: 3.105.147.174/32
    - ipBlock:
        cidr: 3.106.158.203/32
    - ipBlock:
        cidr: 54.233.131.104/32
    - ipBlock:
        cidr: 18.231.104.233/32
    - ipBlock:
        cidr: 18.228.167.86/32

    ports:
    - {protocol: TCP, port: 443} // HTTPS
    - {protocol: TCP, port: 22}  // SSH
---
