apiVersion: v1
kind: ServiceAccount
metadata:
  name: anubis-rpc
  namespace: {{ .Release.Namespace }}
  labels:
    component: pipeline-rpc
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
{{- if .Values.imagePullSecret }}
imagePullSecrets:
  - name: {{ .Values.imagePullSecret }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: anubis-rpc
  namespace: {{ .Release.Namespace }}
  labels:
    rbac.authorization.k8s.io/pipeline-create-jobs: "true"
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
rules:
- apiGroups: ["batch", "extensions"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: [""]
  resources: ["pods", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "delete", "deletecollection"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: anubis-rpc
  namespace: {{ .Release.Namespace }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: anubis-rpc
subjects:
  - kind: ServiceAccount
    name: anubis-rpc
    namespace: anubis

---

{{- range $.Values.rpc.queues }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: anubis-rpc-{{ . }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/name: rpc-{{ . }}
    component: rpc-{{ . }}
    heritage: {{ $.Release.Service | quote }}
    release: {{ $.Release.Name | quote }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: rpc-{{ . }}
      component: rpc-{{ . }}
  replicas: {{ $.Values.rpc.replicas }}
  {{- if $.Values.rollingUpdates }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rpc-{{ . }}
        component: rpc-{{ . }}
    spec:
      serviceAccountName: anubis-rpc
      containers:
      - name: anubis-rpc-{{ . }}
        image: {{ $.Values.api.image }}:{{ $.Values.api.tag }}
        imagePullPolicy: {{ $.Values.imagePullPolicy }}
        command: ["./rq-worker.sh", {{ . | quote }}]
        {{- if not $.Values.debug }}
        resources:
          requests:
            cpu: 500m
            memory: 200Mi
          limits:
            cpu: 2
            memory: 1Gi
        {{- end }}
        env:
        - name: "DEBUG"
          value: {{- if $.Values.debug }} "1"{{- else }} "0"{{- end }}
        - name: "JOB"
          value: "1"
        - name: "IMAGE_PULL_POLICY"
          value: {{ $.Values.imagePullPolicy | quote }}
        - name: "GITHUB_TOKEN"
          valueFrom:
            secretKeyRef:
              name: git
              key: token
        # sqlalchemy uri
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-password
        - name: "DATABASE_URI"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-uri
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-password
        - name: "DB_HOST"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-host
        - name: "DB_PORT"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-port
        - name: "REDIS_PASS"
          valueFrom:
            secretKeyRef:
              name: api
              key: redis-password
        - name: "SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: api
              key: secret-key
---
{{- end }}
