{{- if .Values.theia.enable }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: anubis-theia-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: theia
    component: proxy
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
spec:
  replicas: {{ .Values.theia.proxy.replicas }}
  {{- if .Values.rollingUpdates }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: theia
      component: proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: theia
        component: proxy
    spec:
      containers:
      - name: proxy
        image: {{ .Values.theia.proxy.image }}:{{ .Values.theia.proxy.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if not .Values.debug}}
        resources:
          requests:
            cpu: 250m
            memory: 250Mi
          limits:
            cpu: 2
            memory: 500Mi
        {{- end }}
        ports:
        - name: http
          containerPort: 5000
        env:
        - name: "SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: api
              key: secret-key
        # sqlalchemy uri
        - name: "DATABASE_URI"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-uri
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-password
        - name: "DB_HOST"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-host
        - name: "DB_PORT"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-port
        {{- if .Values.healthChecks }}
        livenessProbe:
          httpGet:
            path: /ping
            port: 5000
          initialDelaySeconds: 60
          failureThreshold: 10
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /ping
            port: 5000
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 1
        {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: anubis-theia-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: theia
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
spec:
  selector:
    app.kubernetes.io/name: theia
    component: proxy
  ports:
    - name: http-tcp
      protocol: TCP
      port: 5000
      targetPort: 5000
    - name: http-udp
      protocol: UDP
      port: 5000
      targetPort: 5000


---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: theia-poller
  namespace: {{ .Release.Namespace }}
  labels:
    component: theia-poller
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
{{- if .Values.imagePullSecret }}
imagePullSecrets:
  - name: {{ .Values.imagePullSecret }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: theia-poller
  namespace: {{ .Release.Namespace }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: theia-poller
  namespace: {{ .Release.Namespace }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: theia-poller
subjects:
  - kind: ServiceAccount
    name: theia-poller
    namespace: {{ .Release.Namespace }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: anubis-theia-poller
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: theia
    component: poller
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
spec:
  replicas: {{ .Values.theia.poller.replicas }}
  {{- if .Values.rollingUpdates }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: theia
      component: poller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: theia
        component: poller
    spec:
      serviceAccountName: theia-poller
      containers:
      - name: poller
        image: {{ .Values.api.image }}:{{ .Values.api.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        args: ["python3", "/opt/app/jobs/poller.py"]
        {{- if not .Values.debug}}
        resources:
          requests:
            cpu: 250m
            memory: 250Mi
          limits:
            cpu: 1
            memory: 500Mi
        {{- end }}
        env:
        - name: "PYTHONPATH"
          value: "/opt/app"
        - name: "SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: api
              key: secret-key
        # sqlalchemy uri
        - name: "DATABASE_URI"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-uri
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-password
        - name: "DB_HOST"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-host
        - name: "DB_PORT"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-port
        - name: "REDIS_PASS"
          valueFrom:
            secretKeyRef:
              name: api
              key: redis-password


{{- end }}
